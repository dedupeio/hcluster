name: tests

on: [push]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -e .
    - name: Test with pytest
      run: |        
        pip install -r requirements.txt
        pytest tests
    - name: Coveralls
      env:
        COVERALLS_PARALLEL: true
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pip install https://github.com/bboe/coveralls-python/archive/github_actions.zip
        coveralls
    - name: Build and publish
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && runner.os != 'Linux'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine wheel
        pip wheel -w dist --no-deps .
        twine upload dist/*
      continue-on-error: true
  complete_coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
  test-aarch64:
    name: "test (aarch64, ${{ matrix.pyver }})"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build Wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install --upgrade pip && \
            pip install -e . && \
            pip install -r requirements.txt && \
            pytest tests && \
            pip install wheel && \
            pip wheel -w dist --no-deps . && \
            deactivate'
    - name: Publish
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        twine upload dist/*
  manylinux_sdist:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Build manylinux Python wheels
      uses: datamade/python-wheels-manylinux-build@248b22d
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38'
    - name: Build sdist
      run: |
        pip install cython numpy
        python setup.py sdist
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        twine upload --skip-existing wheelhouse/*-manylinux1_x86_64.whl
        twine upload dist/*
      continue-on-error: true
